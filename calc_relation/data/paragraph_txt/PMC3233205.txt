Case 1:  Si,j  = 1, that is, i or j is only perturbed in one condition. Without loss of generality, we suppose that protein i is controlled under condition k' (Si,j = {k'}). If   for a threshold u3 > 0, then from stream   we infer j   i. Otherwise, we infer i   j. Similarly, we make an inference from the stream  . If the directions inferred from both streams are the same, say, i   j, we infer that direction as the direction of the edge between i and j: i   j. If the directions from both streams are different, we say that the direction of the edge is undetermined. Taking the conditions in Table 1 for the network in Figure 1 as an example, pairs (1, 2), (1, 8), (2, 6) (3, 4), (4, 5), (6, 8), (8, 10), and (8, 11) belong to Case 1. We simulate data based on the network shown in Figure 1, which is adapted from by correcting one reversed edge and including three missed edges. From Figure 1, we can derive the parent set for each node (protein). For any protein i, we first generate the association strength alphaij from the uniform distribution over the interval [0.5, 2], and randomly assign the sign of alphaij. Given the activities of its parents, we simulate the activity xi of protein i from the normal distribution:  , where the sum extends over all parents of protein i. Thus, we get the empirical distribution of xi when protein i is not intervened. Let xi denote the observed expression level of protein i, then xi is simulated from N(xi, (sigmaM)2). We simulate the interventional data as follows. For an intervention experiment, if the ith protein is inhibited, we sample xi from the left tail of its empirical distribution obtained when protein i is not perturbed, beyond the 5th percentile. If the ith node is stimulated, we sample xi from the right tail of the empirical distribution, beyond the 95th percentile. We simulate a total of nine stimulatory or inhibitory interventional conditions, as summarized in Table 1. Under each perturbation condition, we simulate expression levels for each of the 11 proteins for 600 individual cells. We consider two cases: (1) constant intrinsic variances   and (2) variable intrinsic variances with  , where IG(2, 1) represents the inverse gamma distribution with mean 1 and variance  . Finally, we simulate data where the intrinsic noises are sampled from a heavy tail distribution: t(1), which represent a central t distribution with one degree of freedom. The Mitogen-Activated Protein Kinase (MAPK) pathways transduce a large variety of external signals, leading to a wide range of cellular responses such as growth, differentiation, inflammation, and apoptosis. External stimuli are sensed by cell surface markers, then travel through a cascade of protein modifications of signaling proteins, and eventually lead to changes in nuclear transcription. Single cell interventional data of 11 well-studied proteins from the MAPK pathways were originally generated by using the intracellular multicolor flow cytometry technique. This pathway was perturbed by 9 different stimuli, each targeting a different protein in the selected pathway (Figure 1 and Table 1). applied Bayesian network analysis to infer the causal protein-signaling network. Correcting the bias in the commonly used algorithm proposed by reanalyzed this data set through sampling BN structures from the correct posterior distribution. Both studies used the discretized data where the protein expression levels were grouped into three levels: "low," "middle," and "high." The inhibited molecules were set at "low" values, and activated molecules were set to level "high." We apply our method to this data and compare the results with those from.From RHM, we can only correctly infer the directions of five or six edges. The causal relations for most inferred associations can not be determined. But HM leads to a better result: 9 true directed edges, 1 direction-undetermined, 4 reversed, 6 missed, and 4 false edges, under the thresholds u1 = 0.2, u2 = 0.1, u3 = 0.3, and uf >= 0.8 (Figure 8 and Table 3). This inferred network is comparable with that from, which contains 9 true directed edges, 3 reversed, 8 missed, and 6 false edges. The Hamming distances of these two networks to Figure 1 are 15 and 17, respectively. These results are summarized in Table 3.